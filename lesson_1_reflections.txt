How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    So much easier to see the differences because they are pointed out to you!

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    When you come back to a project you can see the developemnt of the code and it can help you remember why you did things as well as save you time when any bugs are found.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Much better for logical work like programming so that nothing breaks.  You want the project to work, automatic commits can break the code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Again logical changes may requre more than one file.

How can you use the commands git log and git diff to view the history of files?

    Git log displays a history of commits for the project.  Git diff then allows you to compare commits.

How might using version control make you more confident to make changes that
could break something?

	You can always go back to a previous version if you really mess things up.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here

Links:
https://www.udacity.com/wiki/ud775/install-git

Useful commands:
    
git log

git diff version version2

git log --stat  (Stats about which files changed in a commit)

git clone <project>  (e.g. https://github.com/udacity/asteroids)

git checkout <version>

